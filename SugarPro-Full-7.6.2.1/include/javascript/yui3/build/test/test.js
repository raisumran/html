/*
     YUI 3.15.0 (build 834026e)
     Copyright 2014 Yahoo! Inc. All rights reserved.
     Licensed under the BSD License.
     http://yuilibrary.com/license/
     */
YUI.add('test',function(Y,NAME){if(YUI.YUITest){Y.Test=YUI.YUITest;}else{YUITest={version:"3.15.0",guid:function(pre){return Y.guid(pre);}};Y.namespace('Test');YUITest.Object=Y.Object;YUITest.Array=Y.Array;YUITest.Util={mix:Y.mix,JSON:Y.JSON};YUITest.EventTarget=function(){this._handlers={};};YUITest.EventTarget.prototype={constructor:YUITest.EventTarget,attach:function(type,listener){if(typeof this._handlers[type]=="undefined"){this._handlers[type]=[];}
this._handlers[type].push(listener);},subscribe:function(type,listener){this.attach.apply(this,arguments);},fire:function(event){if(typeof event=="string"){event={type:event};}
if(!event.target){event.target=this;}
if(!event.type){throw new Error("Event object missing 'type' property.");}
if(this._handlers[event.type]instanceof Array){var handlers=this._handlers[event.type];for(var i=0,len=handlers.length;i<len;i++){handlers[i].call(this,event);}}},detach:function(type,listener){if(this._handlers[type]instanceof Array){var handlers=this._handlers[type];for(var i=0,len=handlers.length;i<len;i++){if(handlers[i]===listener){handlers.splice(i,1);break;}}}},unsubscribe:function(type,listener){this.detach.apply(this,arguments);}};YUITest.TestSuite=function(data){this.name="";this.items=[];if(typeof data=="string"){this.name=data;}else if(data instanceof Object){for(var prop in data){if(data.hasOwnProperty(prop)){this[prop]=data[prop];}}}
if(this.name===""||!this.name){this.name=YUITest.guid("testSuite_");}};YUITest.TestSuite.prototype={constructor:YUITest.TestSuite,add:function(testObject){if(testObject instanceof YUITest.TestSuite||testObject instanceof YUITest.TestCase){this.items.push(testObject);}
return this;},setUp:function(){},tearDown:function(){}};YUITest.TestCase=function(template){this._should={};for(var prop in template){this[prop]=template[prop];}
if(typeof this.name!="string"){this.name=YUITest.guid("testCase_");}};YUITest.TestCase.DEFAULT_WAIT=10000;YUITest.TestCase._waitTimeout=function(){YUITest.Assert.fail("Timeout: wait() called but resume() never called.");};YUITest.TestCase.prototype={constructor:YUITest.TestCase,callback:function(){return YUITest.TestRunner.callback.apply(YUITest.TestRunner,arguments);},resume:function(segment){YUITest.TestRunner.resume(segment);},wait:function(segment,delay){delay=(typeof segment==='number')?segment:(typeof delay==='number')?delay:YUITest.TestCase.DEFAULT_WAIT;if(typeof segment!=='function'){segment=YUITest.TestCase._waitTimeout;}
throw new YUITest.Wait(segment,delay);},next:function(callback){var self=this;return function(){var args=arguments;self.resume(function(){callback.apply(this,args);});};},waitFor:function(condition,segment,timeout,increment){var self=this,endTime;if((typeof condition!=='function')||(typeof segment!=='function')){self.fail('waitFor() called with invalid parameters.');}
if(typeof timeout!=='number'){timeout=YUITest.TestCase.DEFAULT_WAIT;}
endTime=(+new Date())+timeout;if(typeof increment!=='number'){increment=100;}
self.wait(function(){var now;if(condition.call(self)){segment.call(self);}else{now=(+new Date());if(now>endTime){YUITest.TestCase._waitTimeout();}else{self.waitFor(condition,segment,endTime-now,increment);}}},increment);},assert:function(condition,message){YUITest.Assert._increment();if(!condition){throw new YUITest.AssertionError(YUITest.Assert._formatMessage(message,"Assertion failed."));}},fail:function(message){YUITest.Assert.fail(message);},init:function(){},destroy:function(){},setUp:function(){},tearDown:function(){}};YUITest.TestFormat=function(){function xmlEscape(text){return text.replace(/[<>"'&]/g,function(value){switch(value){case"<":return"&lt;";case">":return"&gt;";case"\"":return"&quot;";case"'":return"&apos;";case"&":return"&amp;";}});}
return{JSON:function(results){return YUITest.Util.JSON.stringify(results);},XML:function(results){function serializeToXML(results){var xml="<"+results.type+" name=\""+xmlEscape(results.name)+"\"";if(typeof(results.duration)=="number"){xml+=" duration=\""+results.duration+"\"";}
if(results.type=="test"){xml+=" result=\""+results.result+"\" message=\""+xmlEscape(results.message)+"\">";}else{xml+=" passed=\""+results.passed+"\" failed=\""+results.failed+"\" ignored=\""+results.ignored+"\" total=\""+results.total+"\">";for(var prop in results){if(results.hasOwnProperty(prop)){if(results[prop]&&typeof results[prop]=="object"&&!(results[prop]instanceof Array)){xml+=serializeToXML(results[prop]);}}}}
xml+="</"+results.type+">";return xml;}
return"<?xml version=\"1.0\" encoding=\"UTF-8\"?>"+serializeToXML(results);},JUnitXML:function(results){function serializeToJUnitXML(results){var xml="";switch(results.type){case"test":if(results.result!="ignore"){xml="<testcase name=\""+xmlEscape(results.name)+"\" time=\""+(results.duration/1000)+"\">";if(results.result=="fail"){xml+="<failure message=\""+xmlEscape(results.message)+"\"><![CDATA["+results.message+"]]></failure>";}
xml+="</testcase>";}
break;case"testcase":xml="<testsuite name=\""+xmlEscape(results.name)+"\" tests=\""+results.total+"\" failures=\""+results.failed+"\" time=\""+(results.duration/1000)+"\">";for(var prop in results){if(results.hasOwnProperty(prop)){if(results[prop]&&typeof results[prop]=="object"&&!(results[prop]instanceof Array)){xml+=serializeToJUnitXML(results[prop]);}}}
xml+="</testsuite>";break;case"testsuite":for(var prop in results){if(results.hasOwnProperty(prop)){if(results[prop]&&typeof results[prop]=="object"&&!(results[prop]instanceof Array)){xml+=serializeToJUnitXML(results[prop]);}}}
break;case"report":xml="<testsuites>";for(var prop in results){if(results.hasOwnProperty(prop)){if(results[prop]&&typeof results[prop]=="object"&&!(results[prop]instanceof Array)){xml+=serializeToJUnitXML(results[prop]);}}}
xml+="</testsuites>";}
return xml;}
return"<?xml version=\"1.0\" encoding=\"UTF-8\"?>"+serializeToJUnitXML(results);},TAP:function(results){var currentTestNum=1;function serializeToTAP(results){var text="";switch(results.type){case"test":if(results.result!="ignore"){text="ok "+(currentTestNum++)+" - "+results.name;if(results.result=="fail"){text="not "+text+" - "+results.message;}
text+="\n";}else{text="#Ignored test "+results.name+"\n";}
break;case"testcase":text="#Begin testcase "+results.name+"("+results.failed+" failed of "+results.total+")\n";for(var prop in results){if(results.hasOwnProperty(prop)){if(results[prop]&&typeof results[prop]=="object"&&!(results[prop]instanceof Array)){text+=serializeToTAP(results[prop]);}}}
text+="#End testcase "+results.name+"\n";break;case"testsuite":text="#Begin testsuite "+results.name+"("+results.failed+" failed of "+results.total+")\n";for(var prop in results){if(results.hasOwnProperty(prop)){if(results[prop]&&typeof results[prop]=="object"&&!(results[prop]instanceof Array)){text+=serializeToTAP(results[prop]);}}}
text+="#End testsuite "+results.name+"\n";break;case"report":for(var prop in results){if(results.hasOwnProperty(prop)){if(results[prop]&&typeof results[prop]=="object"&&!(results[prop]instanceof Array)){text+=serializeToTAP(results[prop]);}}}}
return text;}
return"1.."+results.total+"\n"+serializeToTAP(results);}};}();YUITest.Reporter=function(url,format){this.url=url;this.format=format||YUITest.TestFormat.XML;this._fields=new Object();this._form=null;this._iframe=null;};YUITest.Reporter.prototype={constructor:YUITest.Reporter,addField:function(name,value){this._fields[name]=value;},clearFields:function(){this._fields=new Object();},destroy:function(){if(this._form){this._form.parentNode.removeChild(this._form);this._form=null;}
if(this._iframe){this._iframe.parentNode.removeChild(this._iframe);this._iframe=null;}
this._fields=null;},report:function(results){if(!this._form){this._form=document.createElement("form");this._form.method="post";this._form.style.visibility="hidden";this._form.style.position="absolute";this._form.style.top=0;document.body.appendChild(this._form);try{this._iframe=document.createElement("<iframe name=\"yuiTestTarget\" />");}catch(ex){this._iframe=document.createElement("iframe");this._iframe.name="yuiTestTarget";}
this._iframe.src="javascript:false";this._iframe.style.visibility="hidden";this._iframe.style.position="absolute";this._iframe.style.top=0;document.body.appendChild(this._iframe);this._form.target="yuiTestTarget";}
this._form.action=this.url;while(this._form.hasChildNodes()){this._form.removeChild(this._form.lastChild);}
this._fields.results=this.format(results);this._fields.useragent=navigator.userAgent;this._fields.timestamp=(new Date()).toLocaleString();for(var prop in this._fields){var value=this._fields[prop];if(this._fields.hasOwnProperty(prop)&&(typeof value!="function")){var input=document.createElement("input");input.type="hidden";input.name=prop;input.value=value;this._form.appendChild(input);}}
delete this._fields.results;delete this._fields.useragent;delete this._fields.timestamp;if(arguments[1]!==false){this._form.submit();}}};YUITest.TestRunner=function(){function inGroups(testGroups,filter){if(!filter.length){return true;}else{if(testGroups){for(var i=0,len=testGroups.length;i<len;i++){if(filter.indexOf(","+testGroups[i]+",")>-1){return true;}}}
return false;}}
function TestNode(testObject){this.testObject=testObject;this.firstChild=null;this.lastChild=null;this.parent=null;this.next=null;this.results=new YUITest.Results();if(testObject instanceof YUITest.TestSuite){this.results.type="testsuite";this.results.name=testObject.name;}else if(testObject instanceof YUITest.TestCase){this.results.type="testcase";this.results.name=testObject.name;}}
TestNode.prototype={appendChild:function(testObject){var node=new TestNode(testObject);if(this.firstChild===null){this.firstChild=this.lastChild=node;}else{this.lastChild.next=node;this.lastChild=node;}
node.parent=this;return node;}};function TestRunner(){YUITest.EventTarget.call(this);this.masterSuite=new YUITest.TestSuite(YUITest.guid('testSuite_'));this._cur=null;this._root=null;this._log=true;this._waiting=false;this._running=false;this._lastResults=null;this._context=null;this._groups="";}
TestRunner.prototype=YUITest.Util.mix(new YUITest.EventTarget(),{_ignoreEmpty:false,constructor:YUITest.TestRunner,TEST_CASE_BEGIN_EVENT:"testcasebegin",TEST_CASE_COMPLETE_EVENT:"testcasecomplete",TEST_SUITE_BEGIN_EVENT:"testsuitebegin",TEST_SUITE_COMPLETE_EVENT:"testsuitecomplete",TEST_PASS_EVENT:"pass",TEST_FAIL_EVENT:"fail",ERROR_EVENT:"error",TEST_IGNORE_EVENT:"ignore",COMPLETE_EVENT:"complete",BEGIN_EVENT:"begin",_addTestCaseToTestTree:function(parentNode,testCase){var node=parentNode.appendChild(testCase),prop,testName;for(prop in testCase){if((prop.indexOf("test")===0||prop.indexOf(" ")>-1)&&typeof testCase[prop]=="function"){node.appendChild(prop);}}},_addTestSuiteToTestTree:function(parentNode,testSuite){var node=parentNode.appendChild(testSuite);for(var i=0;i<testSuite.items.length;i++){if(testSuite.items[i]instanceof YUITest.TestSuite){this._addTestSuiteToTestTree(node,testSuite.items[i]);}else if(testSuite.items[i]instanceof YUITest.TestCase){this._addTestCaseToTestTree(node,testSuite.items[i]);}}},_buildTestTree:function(){this._root=new TestNode(this.masterSuite);for(var i=0;i<this.masterSuite.items.length;i++){if(this.masterSuite.items[i]instanceof YUITest.TestSuite){this._addTestSuiteToTestTree(this._root,this.masterSuite.items[i]);}else if(this.masterSuite.items[i]instanceof YUITest.TestCase){this._addTestCaseToTestTree(this._root,this.masterSuite.items[i]);}}},_handleTestObjectComplete:function(node){var parentNode;if(node&&(typeof node.testObject=="object")){parentNode=node.parent;if(parentNode){parentNode.results.include(node.results);parentNode.results[node.testObject.name]=node.results;}
if(node.testObject instanceof YUITest.TestSuite){this._execNonTestMethod(node,"tearDown",false);node.results.duration=(new Date())-node._start;this.fire({type:this.TEST_SUITE_COMPLETE_EVENT,testSuite:node.testObject,results:node.results});}else if(node.testObject instanceof YUITest.TestCase){this._execNonTestMethod(node,"destroy",false);node.results.duration=(new Date())-node._start;this.fire({type:this.TEST_CASE_COMPLETE_EVENT,testCase:node.testObject,results:node.results});}}},_next:function(){if(this._cur===null){this._cur=this._root;}else if(this._cur.firstChild){this._cur=this._cur.firstChild;}else if(this._cur.next){this._cur=this._cur.next;}else{while(this._cur&&!this._cur.next&&this._cur!==this._root){this._handleTestObjectComplete(this._cur);this._cur=this._cur.parent;}
this._handleTestObjectComplete(this._cur);if(this._cur==this._root){this._cur.results.type="report";this._cur.results.timestamp=(new Date()).toLocaleString();this._cur.results.duration=(new Date())-this._cur._start;this._lastResults=this._cur.results;this._running=false;this.fire({type:this.COMPLETE_EVENT,results:this._lastResults});this._cur=null;}else if(this._cur){this._cur=this._cur.next;}}
return this._cur;},_execNonTestMethod:function(node,methodName,allowAsync){var testObject=node.testObject,event={type:this.ERROR_EVENT};try{if(allowAsync&&testObject["async:"+methodName]){testObject["async:"+methodName](this._context);return true;}else{testObject[methodName](this._context);}}catch(ex){node.results.errors++;event.error=ex;event.methodName=methodName;if(testObject instanceof YUITest.TestCase){event.testCase=testObject;}else{event.testSuite=testSuite;}
this.fire(event);}
return false;},_run:function(){var shouldWait=false;var node=this._next();if(node!==null){this._running=true;this._lastResult=null;var testObject=node.testObject;if(typeof testObject=="object"&&testObject!==null){if(testObject instanceof YUITest.TestSuite){this.fire({type:this.TEST_SUITE_BEGIN_EVENT,testSuite:testObject});node._start=new Date();this._execNonTestMethod(node,"setUp",false);}else if(testObject instanceof YUITest.TestCase){this.fire({type:this.TEST_CASE_BEGIN_EVENT,testCase:testObject});node._start=new Date();if(this._execNonTestMethod(node,"init",true)){return;}}
if(typeof setTimeout!="undefined"){setTimeout(function(){YUITest.TestRunner._run();},0);}else{this._run();}}else{this._runTest(node);}}},_resumeTest:function(segment){var node=this._cur;this._waiting=false;if(!node){return;}
var testName=node.testObject;var testCase=node.parent.testObject;if(testCase.__yui_wait){clearTimeout(testCase.__yui_wait);delete testCase.__yui_wait;}
var shouldFail=testName.indexOf("fail:")===0||(testCase._should.fail||{})[testName];var shouldError=(testCase._should.error||{})[testName];var failed=false;var error=null;try{segment.call(testCase,this._context);if(YUITest.Assert._getCount()==0&&!this._ignoreEmpty){throw new YUITest.AssertionError("Test has no asserts.");}
else if(shouldFail){error=new YUITest.ShouldFail();failed=true;}else if(shouldError){error=new YUITest.ShouldError();failed=true;}}catch(thrown){if(testCase.__yui_wait){clearTimeout(testCase.__yui_wait);delete testCase.__yui_wait;}
if(thrown instanceof YUITest.AssertionError){if(!shouldFail){error=thrown;failed=true;}}else if(thrown instanceof YUITest.Wait){if(typeof thrown.segment=="function"){if(typeof thrown.delay=="number"){if(typeof setTimeout!="undefined"){testCase.__yui_wait=setTimeout(function(){YUITest.TestRunner._resumeTest(thrown.segment);},thrown.delay);this._waiting=true;}else{throw new Error("Asynchronous tests not supported in this environment.");}}}
return;}else{if(!shouldError){error=new YUITest.UnexpectedError(thrown);failed=true;}else{if(typeof shouldError=="string"){if(thrown.message!=shouldError){error=new YUITest.UnexpectedError(thrown);failed=true;}}else if(typeof shouldError=="function"){if(!(thrown instanceof shouldError)){error=new YUITest.UnexpectedError(thrown);failed=true;}}else if(typeof shouldError=="object"&&shouldError!==null){if(!(thrown instanceof shouldError.constructor)||thrown.message!=shouldError.message){error=new YUITest.UnexpectedError(thrown);failed=true;}}}}}
if(failed){this.fire({type:this.TEST_FAIL_EVENT,testCase:testCase,testName:testName,error:error});}else{this.fire({type:this.TEST_PASS_EVENT,testCase:testCase,testName:testName});}
this._execNonTestMethod(node.parent,"tearDown",false);YUITest.Assert._reset();var duration=(new Date())-node._start;node.parent.results[testName]={result:failed?"fail":"pass",message:error?error.getMessage():"Test passed",type:"test",name:testName,duration:duration};if(failed){node.parent.results.failed++;}else{node.parent.results.passed++;}
node.parent.results.total++;if(typeof setTimeout!="undefined"){setTimeout(function(){YUITest.TestRunner._run();},0);}else{this._run();}},_handleError:function(error){if(this._waiting){this._resumeTest(function(){throw error;});}else{throw error;}},_runTest:function(node){var testName=node.testObject,testCase=node.parent.testObject,test=testCase[testName],shouldIgnore=testName.indexOf("ignore:")===0||!inGroups(testCase.groups,this._groups)||(testCase._should.ignore||{})[testName];if(shouldIgnore){node.parent.results[testName]={result:"ignore",message:"Test ignored",type:"test",name:testName.indexOf("ignore:")===0?testName.substring(7):testName};node.parent.results.ignored++;node.parent.results.total++;this.fire({type:this.TEST_IGNORE_EVENT,testCase:testCase,testName:testName});if(typeof setTimeout!="undefined"){setTimeout(function(){YUITest.TestRunner._run();},0);}else{this._run();}}else{node._start=new Date();this._execNonTestMethod(node.parent,"setUp",false);this._resumeTest(test);}},getName:function(){return this.masterSuite.name;},setName:function(name){this.masterSuite.name=name;},add:function(testObject){this.masterSuite.add(testObject);return this;},clear:function(){this.masterSuite=new YUITest.TestSuite(YUITest.guid('testSuite_'));},isWaiting:function(){return this._waiting;},isRunning:function(){return this._running;},getResults:function(format){if(!this._running&&this._lastResults){if(typeof format=="function"){return format(this._lastResults);}else{return this._lastResults;}}else{return null;}},getCoverage:function(format){var covObject=null;if(typeof _yuitest_coverage==="object"){covObject=_yuitest_coverage;}
if(typeof __coverage__==="object"){covObject=__coverage__;}
if(!this._running&&typeof covObject=="object"){if(typeof format=="function"){return format(covObject);}else{return covObject;}}else{return null;}},callback:function(){var names=arguments,data=this._context,that=this;return function(){for(var i=0;i<arguments.length;i++){data[names[i]]=arguments[i];}
that._run();};},resume:function(segment){if(this._waiting){this._resumeTest(segment||function(){});}else{throw new Error("resume() called without wait().");}},run:function(options){options=options||{};var runner=YUITest.TestRunner,oldMode=options.oldMode;if(!oldMode&&this.masterSuite.items.length==1&&this.masterSuite.items[0]instanceof YUITest.TestSuite){this.masterSuite=this.masterSuite.items[0];}
runner._groups=(options.groups instanceof Array)?","+options.groups.join(",")+",":"";runner._buildTestTree();runner._context={};runner._root._start=new Date();runner.fire(runner.BEGIN_EVENT);runner._run();}});return new TestRunner();}();YUITest.ArrayAssert={_indexOf:function(haystack,needle){if(haystack.indexOf){return haystack.indexOf(needle);}else{for(var i=0;i<haystack.length;i++){if(haystack[i]===needle){return i;}}
return-1;}},_some:function(haystack,matcher){if(haystack.some){return haystack.some(matcher);}else{for(var i=0;i<haystack.length;i++){if(matcher(haystack[i])){return true;}}
return false;}},contains:function(needle,haystack,message){YUITest.Assert._increment();if(this._indexOf(haystack,needle)==-1){YUITest.Assert.fail(YUITest.Assert._formatMessage(message,"Value "+needle+" ("+(typeof needle)+") not found in array ["+haystack+"]."));}},containsItems:function(needles,haystack,message){YUITest.Assert._increment();for(var i=0;i<needles.length;i++){if(this._indexOf(haystack,needles[i])==-1){YUITest.Assert.fail(YUITest.Assert._formatMessage(message,"Value "+needles[i]+" ("+(typeof needles[i])+") not found in array ["+haystack+"]."));}}},containsMatch:function(matcher,haystack,message){YUITest.Assert._increment();if(typeof matcher!="function"){throw new TypeError("ArrayAssert.containsMatch(): First argument must be a function.");}
if(!this._some(haystack,matcher)){YUITest.Assert.fail(YUITest.Assert._formatMessage(message,"No match found in array ["+haystack+"]."));}},doesNotContain:function(needle,haystack,message){YUITest.Assert._increment();if(this._indexOf(haystack,needle)>-1){YUITest.Assert.fail(YUITest.Assert._formatMessage(message,"Value found in array ["+haystack+"]."));}},doesNotContainItems:function(needles,haystack,message){YUITest.Assert._increment();for(var i=0;i<needles.length;i++){if(this._indexOf(haystack,needles[i])>-1){YUITest.Assert.fail(YUITest.Assert._formatMessage(message,"Value found in array ["+haystack+"]."));}}},doesNotContainMatch:function(matcher,haystack,message){YUITest.Assert._increment();if(typeof matcher!="function"){throw new TypeError("ArrayAssert.doesNotContainMatch(): First argument must be a function.");}
if(this._some(haystack,matcher)){YUITest.Assert.fail(YUITest.Assert._formatMessage(message,"Value found in array ["+haystack+"]."));}},indexOf:function(needle,haystack,index,message){YUITest.Assert._increment();for(var i=0;i<haystack.length;i++){if(haystack[i]===needle){if(index!=i){YUITest.Assert.fail(YUITest.Assert._formatMessage(message,"Value exists at index "+i+" but should be at index "+index+"."));}
return;}}
YUITest.Assert.fail(YUITest.Assert._formatMessage(message,"Value doesn't exist in array ["+haystack+"]."));},itemsAreEqual:function(expected,actual,message){YUITest.Assert._increment();if(typeof expected!="object"||typeof actual!="object"){YUITest.Assert.fail(YUITest.Assert._formatMessage(message,"Value should be an array."));}
if(expected.length!=actual.length){YUITest.Assert.fail(YUITest.Assert._formatMessage(message,"Array should have a length of "+expected.length+" but has a length of "+actual.length+"."));}
for(var i=0;i<expected.length;i++){if(expected[i]!=actual[i]){throw new YUITest.ComparisonFailure(YUITest.Assert._formatMessage(message,"Values in position "+i+" are not equal."),expected[i],actual[i]);}}},itemsAreEquivalent:function(expected,actual,comparator,message){YUITest.Assert._increment();if(typeof comparator!="function"){throw new TypeError("ArrayAssert.itemsAreEquivalent(): Third argument must be a function.");}
if(expected.length!=actual.length){YUITest.Assert.fail(YUITest.Assert._formatMessage(message,"Array should have a length of "+expected.length+" but has a length of "+actual.length));}
for(var i=0;i<expected.length;i++){if(!comparator(expected[i],actual[i])){throw new YUITest.ComparisonFailure(YUITest.Assert._formatMessage(message,"Values in position "+i+" are not equivalent."),expected[i],actual[i]);}}},isEmpty:function(actual,message){YUITest.Assert._increment();if(actual.length>0){YUITest.Assert.fail(YUITest.Assert._formatMessage(message,"Array should be empty."));}},isNotEmpty:function(actual,message){YUITest.Assert._increment();if(actual.length===0){YUITest.Assert.fail(YUITest.Assert._formatMessage(message,"Array should not be empty."));}},itemsAreSame:function(expected,actual,message){YUITest.Assert._increment();if(expected.length!=actual.length){YUITest.Assert.fail(YUITest.Assert._formatMessage(message,"Array should have a length of "+expected.length+" but has a length of "+actual.length));}
for(var i=0;i<expected.length;i++){if(expected[i]!==actual[i]){throw new YUITest.ComparisonFailure(YUITest.Assert._formatMessage(message,"Values in position "+i+" are not the same."),expected[i],actual[i]);}}},lastIndexOf:function(needle,haystack,index,message){for(var i=haystack.length;i>=0;i--){if(haystack[i]===needle){if(index!=i){YUITest.Assert.fail(YUITest.Assert._formatMessage(message,"Value exists at index "+i+" but should be at index "+index+"."));}
return;}}
YUITest.Assert.fail(YUITest.Assert._formatMessage(message,"Value doesn't exist in array."));},isUnique:function(array,comparator,message){YUITest.Assert._increment();if(!Y.Lang.isArray(array)){throw new TypeError("ArrayAssert.isUnique(): First argument must be an array");}
if(Y.Lang.isValue(comparator)&&!Y.Lang.isFunction(comparator)){throw new TypeError("ArrayAssert.isUnique(): Second argument must be a function");}
if(Y.Array.unique(array,comparator).length<array.length){message=YUITest.Assert._formatMessage(message,"Array contains duplicate(s)");YUITest.Assert.fail(message);}}};YUITest.Assert={_asserts:0,_formatMessage:function(customMessage,defaultMessage){if(typeof customMessage=="string"&&customMessage.length>0){return customMessage.replace("{message}",defaultMessage);}else{return defaultMessage;}},_getCount:function(){return this._asserts;},_increment:function(){this._asserts++;},_reset:function(){this._asserts=0;},fail:function(message){throw new YUITest.AssertionError(YUITest.Assert._formatMessage(message,"Test force-failed."));},pass:function(message){YUITest.Assert._increment();},areEqual:function(expected,actual,message){YUITest.Assert._increment();if(expected!=actual){throw new YUITest.ComparisonFailure(YUITest.Assert._formatMessage(message,"Values should be equal."),expected,actual);}},areNotEqual:function(unexpected,actual,message){YUITest.Assert._increment();if(unexpected==actual){throw new YUITest.UnexpectedValue(YUITest.Assert._formatMessage(message,"Values should not be equal."),unexpected);}},areNotSame:function(unexpected,actual,message){YUITest.Assert._increment();if(unexpected===actual){throw new YUITest.UnexpectedValue(YUITest.Assert._formatMessage(message,"Values should not be the same."),unexpected);}},areSame:function(expected,actual,message){YUITest.Assert._increment();if(expected!==actual){throw new YUITest.ComparisonFailure(YUITest.Assert._formatMessage(message,"Values should be the same."),expected,actual);}},isFalse:function(actual,message){YUITest.Assert._increment();if(false!==actual){throw new YUITest.ComparisonFailure(YUITest.Assert._formatMessage(message,"Value should be false."),false,actual);}},isTrue:function(actual,message){YUITest.Assert._increment();if(true!==actual){throw new YUITest.ComparisonFailure(YUITest.Assert._formatMessage(message,"Value should be true."),true,actual);}},isNaN:function(actual,message){YUITest.Assert._increment();if(!isNaN(actual)){throw new YUITest.ComparisonFailure(YUITest.Assert._formatMessage(message,"Value should be NaN."),NaN,actual);}},isNotNaN:function(actual,message){YUITest.Assert._increment();if(isNaN(actual)){throw new YUITest.UnexpectedValue(YUITest.Assert._formatMessage(message,"Values should not be NaN."),NaN);}},isNotNull:function(actual,message){YUITest.Assert._increment();if(actual===null){throw new YUITest.UnexpectedValue(YUITest.Assert._formatMessage(message,"Values should not be null."),null);}},isNotUndefined:function(actual,message){YUITest.Assert._increment();if(typeof actual=="undefined"){throw new YUITest.UnexpectedValue(YUITest.Assert._formatMessage(message,"Value should not be undefined."),undefined);}},isNull:function(actual,message){YUITest.Assert._increment();if(actual!==null){throw new YUITest.ComparisonFailure(YUITest.Assert._formatMessage(message,"Value should be null."),null,actual);}},isUndefined:function(actual,message){YUITest.Assert._increment();if(typeof actual!="undefined"){throw new YUITest.ComparisonFailure(YUITest.Assert._formatMessage(message,"Value should be undefined."),undefined,actual);}},isArray:function(actual,message){YUITest.Assert._increment();var shouldFail=false;if(Array.isArray){shouldFail=!Array.isArray(actual);}else{shouldFail=Object.prototype.toString.call(actual)!="[object Array]";}
if(shouldFail){throw new YUITest.UnexpectedValue(YUITest.Assert._formatMessage(message,"Value should be an array."),actual);}},isBoolean:function(actual,message){YUITest.Assert._increment();if(typeof actual!="boolean"){throw new YUITest.UnexpectedValue(YUITest.Assert._formatMessage(message,"Value should be a Boolean."),actual);}},isFunction:function(actual,message){YUITest.Assert._increment();if(!(actual instanceof Function)){throw new YUITest.UnexpectedValue(YUITest.Assert._formatMessage(message,"Value should be a function."),actual);}},isInstanceOf:function(expected,actual,message){YUITest.Assert._increment();if(!(actual instanceof expected)){throw new YUITest.ComparisonFailure(YUITest.Assert._formatMessage(message,"Value isn't an instance of expected type."),expected,actual);}},isNumber:function(actual,message){YUITest.Assert._increment();if(typeof actual!="number"){throw new YUITest.UnexpectedValue(YUITest.Assert._formatMessage(message,"Value should be a number."),actual);}},isObject:function(actual,message){YUITest.Assert._increment();if(!actual||(typeof actual!="object"&&typeof actual!="function")){throw new YUITest.UnexpectedValue(YUITest.Assert._formatMessage(message,"Value should be an object."),actual);}},isString:function(actual,message){YUITest.Assert._increment();if(typeof actual!="string"){throw new YUITest.UnexpectedValue(YUITest.Assert._formatMessage(message,"Value should be a string."),actual);}},isTypeOf:function(expectedType,actualValue,message){YUITest.Assert._increment();if(typeof actualValue!=expectedType){throw new YUITest.ComparisonFailure(YUITest.Assert._formatMessage(message,"Value should be of type "+expectedType+"."),expectedType,typeof actualValue);}},throwsError:function(expectedError,method,message){YUITest.Assert._increment();var error=false;try{method();}catch(thrown){if(typeof expectedError=="string"){if(thrown.message!=expectedError){error=true;}}else if(typeof expectedError=="function"){if(!(thrown instanceof expectedError)){error=true;}}else if(typeof expectedError=="object"&&expectedError!==null){if(!(thrown instanceof expectedError.constructor)||thrown.message!=expectedError.message){error=true;}}else{error=true;}
if(error){throw new YUITest.UnexpectedError(thrown);}else{return;}}
throw new YUITest.AssertionError(YUITest.Assert._formatMessage(message,"Error should have been thrown."));}};YUITest.AssertionError=function(message){this.message=message;this.name="Assert Error";};YUITest.AssertionError.prototype={constructor:YUITest.AssertionError,getMessage:function(){return this.message;},toString:function(){return this.name+": "+this.getMessage();}};YUITest.ComparisonFailure=function(message,expected,actual){YUITest.AssertionError.call(this,message);this.expected=expected;this.actual=actual;this.name="ComparisonFailure";};YUITest.ComparisonFailure.prototype=new YUITest.AssertionError;YUITest.ComparisonFailure.prototype.constructor=YUITest.ComparisonFailure;YUITest.ComparisonFailure.prototype.getMessage=function(){return this.message+"\nExpected: "+this.expected+" ("+(typeof this.expected)+")"+"\nActual: "+this.actual+" ("+(typeof this.actual)+")";};YUITest.CoverageFormat={JSON:function(coverage){return YUITest.Util.JSON.stringify(coverage);},XdebugJSON:function(coverage){var report={};for(var prop in coverage){if(coverage.hasOwnProperty(prop)){report[prop]=coverage[prop].lines;}}
return YUITest.Util.JSON.stringify(coverage);}};YUITest.DateAssert={datesAreEqual:function(expected,actual,message){YUITest.Assert._increment();if(expected instanceof Date&&actual instanceof Date){var msg="";if(expected.getFullYear()!=actual.getFullYear()){msg="Years should be equal.";}
if(expected.getMonth()!=actual.getMonth()){msg="Months should be equal.";}
if(expected.getDate()!=actual.getDate()){msg="Days of month should be equal.";}
if(msg.length){throw new YUITest.ComparisonFailure(YUITest.Assert._formatMessage(message,msg),expected,actual);}}else{throw new TypeError("YUITest.DateAssert.datesAreEqual(): Expected and actual values must be Date objects.");}},timesAreEqual:function(expected,actual,message){YUITest.Assert._increment();if(expected instanceof Date&&actual instanceof Date){var msg="";if(expected.getHours()!=actual.getHours()){msg="Hours should be equal.";}
if(expected.getMinutes()!=actual.getMinutes()){msg="Minutes should be equal.";}
if(expected.getSeconds()!=actual.getSeconds()){msg="Seconds should be equal.";}
if(msg.length){throw new YUITest.ComparisonFailure(YUITest.Assert._formatMessage(message,msg),expected,actual);}}else{throw new TypeError("YUITest.DateAssert.timesAreEqual(): Expected and actual values must be Date objects.");}}};YUITest.Mock=function(template){template=template||{};var mock,name;try{function f(){}
f.prototype=template;mock=new f();}catch(ex){mock={};}
for(name in template){if(template.hasOwnProperty(name)){if(typeof template[name]=="function"){mock[name]=function(name){return function(){YUITest.Assert.fail("Method "+name+"() was called but was not expected to be.");};}(name);}}}
return mock;};YUITest.Mock.expect=function(mock,expectation){if(!mock.__expectations){mock.__expectations={};}
if(expectation.method){var name=expectation.method,args=expectation.args||[],result=expectation.returns,callCount=(typeof expectation.callCount=="number")?expectation.callCount:1,error=expectation.error,run=expectation.run||function(){},runResult,i;mock.__expectations[name]=expectation;expectation.callCount=callCount;expectation.actualCallCount=0;for(i=0;i<args.length;i++){if(!(args[i]instanceof YUITest.Mock.Value)){args[i]=YUITest.Mock.Value(YUITest.Assert.areSame,[args[i]],"Argument "+i+" of "+name+"() is incorrect.");}}
if(callCount>0){mock[name]=function(){try{expectation.actualCallCount++;YUITest.Assert.areEqual(args.length,arguments.length,"Method "+name+"() passed incorrect number of arguments.");for(var i=0,len=args.length;i<len;i++){args[i].verify(arguments[i]);}
runResult=run.apply(this,arguments);if(error){throw error;}}catch(ex){YUITest.TestRunner._handleError(ex);}
return expectation.hasOwnProperty('returns')?result:runResult;};}else{mock[name]=function(){try{YUITest.Assert.fail("Method "+name+"() should not have been called.");}catch(ex){YUITest.TestRunner._handleError(ex);}};}}else if(expectation.property){mock.__expectations[expectation.property]=expectation;}};YUITest.Mock.verify=function(mock){try{for(var name in mock.__expectations){if(mock.__expectations.hasOwnProperty(name)){var expectation=mock.__expectations[name];if(expectation.method){YUITest.Assert.areEqual(expectation.callCount,expectation.actualCallCount,"Method "+expectation.method+"() wasn't called the expected number of times.");}else if(expectation.property){YUITest.Assert.areEqual(expectation.value,mock[expectation.property],"Property "+expectation.property+" wasn't set to the correct value.");}}}}catch(ex){YUITest.TestRunner._handleError(ex);}};YUITest.Mock.Value=function(method,originalArgs,message){if(this instanceof YUITest.Mock.Value){this.verify=function(value){var args=[].concat(originalArgs||[]);args.push(value);args.push(message);method.apply(null,args);};}else{return new YUITest.Mock.Value(method,originalArgs,message);}};YUITest.Mock.Value.Any=YUITest.Mock.Value(function(){});YUITest.Mock.Value.Boolean=YUITest.Mock.Value(YUITest.Assert.isBoolean);YUITest.Mock.Value.Number=YUITest.Mock.Value(YUITest.Assert.isNumber);YUITest.Mock.Value.String=YUITest.Mock.Value(YUITest.Assert.isString);YUITest.Mock.Value.Object=YUITest.Mock.Value(YUITest.Assert.isObject);YUITest.Mock.Value.Function=YUITest.Mock.Value(YUITest.Assert.isFunction);YUITest.ObjectAssert={areEqual:function(expected,actual,message){YUITest.Assert._increment();var expectedKeys=YUITest.Object.keys(expected),actualKeys=YUITest.Object.keys(actual);if(expectedKeys.length!=actualKeys.length){YUITest.Assert.fail(YUITest.Assert._formatMessage(message,"Object should have "+expectedKeys.length+" keys but has "+actualKeys.length));}
for(var name in expected){if(expected.hasOwnProperty(name)){if(expected[name]!=actual[name]){throw new YUITest.ComparisonFailure(YUITest.Assert._formatMessage(message,"Values should be equal for property "+name),expected[name],actual[name]);}}}},hasKey:function(propertyName,object,message){YUITest.ObjectAssert.ownsOrInheritsKey(propertyName,object,message);},hasKeys:function(properties,object,message){YUITest.ObjectAssert.ownsOrInheritsKeys(properties,object,message);},inheritsKey:function(propertyName,object,message){YUITest.Assert._increment();if(!(propertyName in object&&!object.hasOwnProperty(propertyName))){YUITest.Assert.fail(YUITest.Assert._formatMessage(message,"Property '"+propertyName+"' not found on object instance."));}},inheritsKeys:function(properties,object,message){YUITest.Assert._increment();for(var i=0;i<properties.length;i++){if(!(propertyName in object&&!object.hasOwnProperty(properties[i]))){YUITest.Assert.fail(YUITest.Assert._formatMessage(message,"Property '"+properties[i]+"' not found on object instance."));}}},ownsKey:function(propertyName,object,message){YUITest.Assert._increment();if(!object.hasOwnProperty(propertyName)){YUITest.Assert.fail(YUITest.Assert._formatMessage(message,"Property '"+propertyName+"' not found on object instance."));}},ownsKeys:function(properties,object,message){YUITest.Assert._increment();for(var i=0;i<properties.length;i++){if(!object.hasOwnProperty(properties[i])){YUITest.Assert.fail(YUITest.Assert._formatMessage(message,"Property '"+properties[i]+"' not found on object instance."));}}},ownsNoKeys:function(object,message){YUITest.Assert._increment();var count=YUITest.Object.keys(object).length;if(count!==0){YUITest.Assert.fail(YUITest.Assert._formatMessage(message,"Object owns "+count+" properties but should own none."));}},ownsOrInheritsKey:function(propertyName,object,message){YUITest.Assert._increment();if(!(propertyName in object)){YUITest.Assert.fail(YUITest.Assert._formatMessage(message,"Property '"+propertyName+"' not found on object."));}},ownsOrInheritsKeys:function(properties,object,message){YUITest.Assert._increment();for(var i=0;i<properties.length;i++){if(!(properties[i]in object)){YUITest.Assert.fail(YUITest.Assert._formatMessage(message,"Property '"+properties[i]+"' not found on object."));}}}};YUITest.Results=function(name){this.name=name;this.passed=0;this.failed=0;this.errors=0;this.ignored=0;this.total=0;this.duration=0;};YUITest.Results.prototype.include=function(results){this.passed+=results.passed;this.failed+=results.failed;this.ignored+=results.ignored;this.total+=results.total;this.errors+=results.errors;};YUITest.ShouldError=function(message){YUITest.AssertionError.call(this,message||"This test should have thrown an error but didn't.");this.name="ShouldError";};YUITest.ShouldError.prototype=new YUITest.AssertionError();YUITest.ShouldError.prototype.constructor=YUITest.ShouldError;YUITest.ShouldFail=function(message){YUITest.AssertionError.call(this,message||"This test should fail but didn't.");this.name="ShouldFail";};YUITest.ShouldFail.prototype=new YUITest.AssertionError();YUITest.ShouldFail.prototype.constructor=YUITest.ShouldFail;YUITest.UnexpectedError=function(cause){YUITest.AssertionError.call(this,"Unexpected error: "+cause.message);this.cause=cause;this.name="UnexpectedError";this.stack=cause.stack;};YUITest.UnexpectedError.prototype=new YUITest.AssertionError();YUITest.UnexpectedError.prototype.constructor=YUITest.UnexpectedError;YUITest.UnexpectedValue=function(message,unexpected){YUITest.AssertionError.call(this,message);this.unexpected=unexpected;this.name="UnexpectedValue";};YUITest.UnexpectedValue.prototype=new YUITest.AssertionError();YUITest.UnexpectedValue.prototype.constructor=YUITest.UnexpectedValue;YUITest.UnexpectedValue.prototype.getMessage=function(){return this.message+"\nUnexpected: "+this.unexpected+" ("+(typeof this.unexpected)+") ";};YUITest.Wait=function(segment,delay){this.segment=(typeof segment=="function"?segment:null);this.delay=(typeof delay=="number"?delay:0);};Y.Test=YUITest;Y.Object.each(YUITest,function(item,name){var name=name.replace('Test','');Y.Test[name]=item;});}
Y.Assert=YUITest.Assert;Y.Assert.Error=Y.Test.AssertionError;Y.Assert.ComparisonFailure=Y.Test.ComparisonFailure;Y.Assert.UnexpectedValue=Y.Test.UnexpectedValue;Y.Mock=Y.Test.Mock;Y.ObjectAssert=Y.Test.ObjectAssert;Y.ArrayAssert=Y.Test.ArrayAssert;Y.DateAssert=Y.Test.DateAssert;Y.Test.ResultsFormat=Y.Test.TestFormat;var itemsAreEqual=Y.Test.ArrayAssert.itemsAreEqual;Y.Test.ArrayAssert.itemsAreEqual=function(expected,actual,message){return itemsAreEqual.call(this,Y.Array(expected),Y.Array(actual),message);};Y.assert=function(condition,message){Y.Assert._increment();if(!condition){throw new Y.Assert.Error(Y.Assert._formatMessage(message,"Assertion failed."));}};Y.fail=Y.Assert.fail;Y.Test.Runner.once=Y.Test.Runner.subscribe;Y.Test.Runner.disableLogging=function(){Y.Test.Runner._log=false;};Y.Test.Runner.enableLogging=function(){Y.Test.Runner._log=true;};Y.Test.Runner._ignoreEmpty=true;Y.Test.Runner._log=true;Y.Test.Runner.on=Y.Test.Runner.attach;if(!YUI.YUITest){if(Y.config.win){Y.config.win.YUITest=YUITest;}
YUI.YUITest=Y.Test;var logEvent=function(event){var message="";var messageType="";switch(event.type){case this.BEGIN_EVENT:message="Testing began at "+(new Date()).toString()+".";messageType="info";break;case this.COMPLETE_EVENT:message=Y.Lang.sub("Testing completed at "+
(new Date()).toString()+".\n"+"Passed:{passed} Failed:{failed} "+"Total:{total} ({ignored} ignored)",event.results);messageType="info";break;case this.TEST_FAIL_EVENT:message=event.testName+": failed.\n"+event.error.getMessage();messageType="fail";break;case this.TEST_IGNORE_EVENT:message=event.testName+": ignored.";messageType="ignore";break;case this.TEST_PASS_EVENT:message=event.testName+": passed.";messageType="pass";break;case this.TEST_SUITE_BEGIN_EVENT:message="Test suite \""+event.testSuite.name+"\" started.";messageType="info";break;case this.TEST_SUITE_COMPLETE_EVENT:message=Y.Lang.sub("Test suite \""+
event.testSuite.name+"\" completed"+".\n"+"Passed:{passed} Failed:{failed} "+"Total:{total} ({ignored} ignored)",event.results);messageType="info";break;case this.TEST_CASE_BEGIN_EVENT:message="Test case \""+event.testCase.name+"\" started.";messageType="info";break;case this.TEST_CASE_COMPLETE_EVENT:message=Y.Lang.sub("Test case \""+
event.testCase.name+"\" completed.\n"+"Passed:{passed} Failed:{failed} "+"Total:{total} ({ignored} ignored)",event.results);messageType="info";break;default:message="Unexpected event "+event.type;messageType="info";}
if(Y.Test.Runner._log){Y.log(message,messageType,"TestRunner");}};var i,name;for(i in Y.Test.Runner){name=Y.Test.Runner[i];if(i.indexOf('_EVENT')>-1){Y.Test.Runner.subscribe(name,logEvent);}};}},'3.15.0',{"requires":["event-simulate","event-custom","json-stringify"]});